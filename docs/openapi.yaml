openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/admin/users/{username}/update:
    put:
      tags:
        - admin-controller
      operationId: updateUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/admin/cards/{cardNumber}/block:
    put:
      tags:
        - admin-controller
      operationId: blockUnblockCard
      parameters:
        - name: cardNumber
          in: path
          required: true
          schema:
            type: string
        - name: action
          in: query
          required: false
          schema:
            type: string
            default: block
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BlockUnblockCardResponseDTO"
  /api/user/cards/transfer:
    post:
      tags:
        - user-controller
      operationId: transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/admin/users/create:
    post:
      tags:
        - admin-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/admin/cards:
    get:
      tags:
        - admin-controller
      operationId: getAllCards
      parameters:
        - name: masked
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageGetCardResponseDTO"
    post:
      tags:
        - admin-controller
      operationId: createCard
      parameters:
        - name: cardHolderName
          in: query
          required: false
          schema:
            type: string
            default: MOMENTUM CARD
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCardRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateCardResponseDTO"
    delete:
      tags:
        - admin-controller
      operationId: deleteCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteCardRequestDTO"
        required: true
      responses:
        "200":
          description: OK
  /api/user/cards/{cardNumber}/block:
    patch:
      tags:
        - user-controller
      operationId: requestBlock
      parameters:
        - name: cardNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BlockUnblockCardResponseDTO"
  /api/user/cards:
    get:
      tags:
        - user-controller
      operationId: getAllCards_1
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageGetCardResponseDTO"
  /api/user/cards/{cardNumber}:
    get:
      tags:
        - user-controller
      operationId: getCard
      parameters:
        - name: cardNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetCardResponseDTO"
  /api/user/cards/{cardNumber}/balance:
    get:
      tags:
        - user-controller
      operationId: getCardBalance
      parameters:
        - name: cardNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: number
  /api/admin/users:
    get:
      tags:
        - admin-controller
      operationId: getUsers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageUserDTO"
  /api/admin/users/{username}:
    get:
      tags:
        - admin-controller
      operationId: getUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    delete:
      tags:
        - admin-controller
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
  /api/admin/cards/{cardNumber}:
    get:
      tags:
        - admin-controller
      operationId: getCard_1
      parameters:
        - name: cardNumber
          in: path
          required: true
          schema:
            type: string
        - name: masked
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetCardResponseDTO"
components:
  schemas:
    UserDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - USER
            - ADMIN
    BlockUnblockCardResponseDTO:
      type: object
      properties:
        cardNumber:
          type: string
        status:
          type: string
    TransferRequestDTO:
      type: object
      properties:
        cardNumberFrom:
          type: string
        cardNumberTo:
          type: string
        amount:
          type: number
    AuthRequestDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    CreateCardRequestDTO:
      type: object
      properties:
        userId:
          type: integer
          format: int64
    CreateCardResponseDTO:
      type: object
      properties:
        cardNumber:
          type: string
    GetCardResponseDTO:
      type: object
      properties:
        cardNumber:
          type: string
        balance:
          type: number
        expirationDate:
          type: object
          properties:
            year:
              type: integer
              format: int32
            month:
              type: string
              enum:
                - JANUARY
                - FEBRUARY
                - MARCH
                - APRIL
                - MAY
                - JUNE
                - JULY
                - AUGUST
                - SEPTEMBER
                - OCTOBER
                - NOVEMBER
                - DECEMBER
            monthValue:
              type: integer
              format: int32
            leapYear:
              type: boolean
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - EXPIRED
        cardHolderName:
          type: string
    PageGetCardResponseDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/GetCardResponseDTO"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageUserDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/UserDTO"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    DeleteCardRequestDTO:
      type: object
      properties:
        cardNumber:
          type: string
